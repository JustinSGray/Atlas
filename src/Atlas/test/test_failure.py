from Atlas import failureCalc
import numpy as np
import unittest


def relative_err(x, y):
    return (np.abs(x-y)/np.linalg.norm(x)).max()


class AtlasTestFailure(unittest.TestCase):

    def test_failure_calc(self):
        comp = failureCalc()
        comp.type_flag = 1

        comp.run()
        comp.yN = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
        comp.Finternal = 1.e3 * np.array([
            [ 0.0060,    0.0061,    0.0067,    0.0070,    0.0067,    0.0061,    0.0052,    0.0043,    0.0032,    0.0019,  0],
            [-1.0845,   -1.0845,   -1.0845,   -1.0845,   -1.0845,   -1.0845,   -0.9600,    0.0000,    0.0000,    0.0000,  0],
            [-0.0590,   -0.0576,   -0.0552,   -0.0557,   -0.0615,   -0.0721,   -0.0807,    0.0774,    0.0549,    0.0301,  0],
            [-0.1975,   -0.1396,   -0.0845,   -0.0292,    0.0319,    0.1036,    0.1861,    0.0918,    0.0367,    0.0065,  0],
            [-0.0054,   -0.0054,   -0.0053,   -0.0051,   -0.0048,   -0.0046,   -0.0042,   -0.0035,   -0.0026,   -0.0016,  0],
            [-0.0478,   -0.0417,   -0.0351,   -0.0280,   -0.0212,   -0.0151,   -0.0098,   -0.0055,   -0.0023,   -0.0004,  0]]
        )

        comp.strain_top = np.array([
            [0.000324431301337246,   0.000256654350930759,  0.000166969814378305,  3.54021221758653e-05, -0.000179059361519192, -0.000552190113896671, -0.000969951218287876, -0.000641588440001147, -0.000320224722824943, -8.09105043740408e-05, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [-3.43479597844849e-05, -3.93420100308486e-05, -4.42672276013990e-05, -5.07469212499079e-05, -5.90275454754569e-05, -6.64009851362718e-05, -6.81788516942396e-05, -6.22804500608437e-05, -4.76541279499912e-05, -2.04678186390271e-05, 0]
        ])

        comp.strain_bottom = np.array([
            [-0.000410742253294523, -0.000349847347261267, -0.000268237431845234, -0.000146276333313888,  5.65649060188704e-05,  0.000431063240542617,  0.000969951218287876,  0.000641588440001147,  0.000320224722824943,  8.09105043740409e-05, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [-3.43479597844849e-05, -3.93420100308486e-05, -4.42672276013990e-05, -5.07469212499079e-05, -5.90275454754569e-05, -6.64009851362718e-05, -6.81788516942396e-05, -6.22804500608437e-05, -4.76541279499912e-05, -2.04678186390271e-05, 0]
        ])

        comp.strain_back = np.array([
            [-0.000132208563077293, -0.000137239632124606, -0.000140297772709814, -0.000141114679589468, -0.000140416760083675, -0.000130743918204572, -5.62383510852933e-05, -3.87302845541829e-05, -1.99497630809408e-05, -5.08949697520898e-06, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [-3.43479597844849e-05, -3.93420100308486e-05, -4.42672276013990e-05, -5.07469212499079e-05, -5.90275454754569e-05, -6.64009851362718e-05, -6.81788516942396e-05, -6.22804500608437e-05, -4.76541279499912e-05, -2.04678186390271e-05, 0]
        ])

        comp.strain_front = np.array([
            [4.58976111200157e-05,   4.40466357940974e-05,  3.90301552428856e-05,  3.02404684514454e-05,  1.79223045833536e-05,  9.61704485051833e-06,  5.62383510852934e-05,  3.87302845541831e-05,  1.99497630809410e-05,  5.08949697520909e-06, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [-3.43479597844849e-05, -3.93420100308486e-05, -4.42672276013990e-05, -5.07469212499079e-05, -5.90275454754569e-05, -6.64009851362718e-05, -6.81788516942396e-05, -6.22804500608437e-05, -4.76541279499912e-05, -2.04678186390271e-05, 0]
        ])

        comp.bending_x = np.array([-8.90530870986543e-05, -9.06431339593515e-05, -8.96639639763497e-05, -8.56775740204565e-05, -7.91695323335143e-05, -7.01804815275453e-05, -5.62383510852933e-05, -3.87302845541830e-05, -1.99497630809409e-05, -5.08949697520904e-06, 0])

        comp.bending_z = np.array([0.000367586777315884, 0.000303250849096013, 0.000217603623111769, 9.08392277448765e-05, -0.000117812133769031, -0.000491626677219644, -0.000969951218287876, -0.000641588440001147, -0.000320224722824943, -8.09105043740408e-05, 0])

        comp.axial_y = np.array([-4.31554759786386e-05, -4.65964981652541e-05,   -5.06338087334642e-05,  -5.54371055690111e-05,  -6.12472277501607e-05,  -6.05634366770269e-05,  5.42101086242752e-20,  1.08420217248550e-19,  1.08420217248550e-19,  5.42101086242752e-20,  0])

        comp.torsion_y = np.array([-3.43479597844849e-05, -3.93420100308486e-05, -4.42672276013990e-05, -5.07469212499079e-05, -5.90275454754569e-05, -6.64009851362718e-05, -6.81788516942396e-05, -6.22804500608437e-05, -4.76541279499912e-05, -2.04678186390271e-05, 0])

        comp.d = np.array([0.0843, 0.0780, 0.0718, 0.0655, 0.0592, 0.0530, 0.0477, 0.0431, 0.0384, 0.0338])

        comp.theta = np.array([0.3491, 0.3491, 0.3491, 0.3491, 0.3491, 0.3491, 0.3491, 0.3491, 0.3491, 0.3491])

        comp.nTube = np.array([4, 4, 4, 4, 4, 4, 4, 4, 4, 4])

        comp.nCap = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])

        comp.yWire = 5.8852

        comp.zWire = 1

        comp.EIxJ = 4.9428e+03

        comp.EIzJ = 4.9428e+03

        comp.lBiscuit = np.array([0.3048, 0.3048, 0.3048, 0.3048, 0.3048, 0.3048, 0.2820, 0.2450, 0.2080, 0.1709])

        comp.RQuad = 14.1921

        comp.hQuad = 3

        comp.TQuad = 238.1019

        comp.EIQuad = 2.3706e+04

        comp.GJQuad = 2.2828e+04

        comp.tWire = 0.0016

        comp.TWire = 1100

        comp.TEtension = 50

        """======  check outputs  ======"""
        fail_top_cap = np.zeros((3, 11))
        fail_top_plus = np.array([[0.0284056598067858,  0.0220735476027992,  0.0137497301758022,  0.00156302383714983, -0.0441046203021050, -0.126863798140737,  -0.219009394673833,  -0.146226312533080, -0.0742941768089941, -0.0194384389147555, 0],
                        [0.0318448674839274,  0.0259292216986276,  0.0179995220398921,  0.00632145100424583, -0.00215607064524889,   -0.00782379900472648,    -0.0142352598316179, -0.00924154332506846,    -0.00444422263751008,    -0.00103729098314935,  0],
                        [-0.00655602066494422,    -0.00544664484656088,    -0.00394269333196902,   -0.00172044360420772,   0.00195071768154226, 0.00848839668802907, 0.0159465690832996,  0.0101806514274382, 0.00472696523760348, 0.00101414190814641, 0]])
        fail_top_minus = np.array([[0.0306516581316693,  0.0246461047264613,  0.0166443451591611,  0.00488134320270856, -0.0347650820386925, -0.116357609268859,  -0.208221905730749,  -0.136372088683510,  -0.0667541792059505, -0.0161999512932897, 0],
                        [0.0276842464869834,  0.0211636637434136,  0.0126373649338952,  0.000174398678360763,    -0.00335553155314803,    -0.00917309085271744,    -0.0156206785661085, -0.0105071044215468, -0.00541257161959346,    -0.00145320440339635, 0],
                        [0.00508699270088119, 0.00376402633703683, 0.00204942818184007, -0.000449951577164631,   -0.00447526689778466,    -0.0113283005605897, -0.0188625105344069, -0.0128443241267155, -0.00676508473584494,    -0.00188953008644754, 0]])

        fail_bottom_cap = np.zeros((3, 11))
        fail_bottom_plus = np.array([[-0.0931764863820579, -0.0801604822384388, -0.0625768957725388, -0.0362296084758924, 0.00321845686982193, 0.0370629778031000, 0.0860526438589149, 0.0563590018955698, 0.0275877487008108, 0.00669501431312352, 0],
                        [-0.00597251967806871, -0.00498458026256345, -0.00367852723623861, -0.00173565827546095, 0.00876452733835199, 0.0435690016943585, 0.0931163046862603, 0.0626338178937925, 0.0322648382996480, 0.00866268539009956, 0],
                        [0.00663573285498099, 0.00543625601617850, 0.00386654665782075, 0.00153954499250117, -0.00227725983627241, -0.00915483301968193, -0.0188625105344069, -0.0128443241267156, -0.00676508473584493, -0.00188953008644754, 0]])
        fail_bottom_minus = np.array([[-0.0877418357948886, -0.0739356560986589, -0.0555727850193590, -0.0282002586368252, 0.00707824269383313, 0.0414049096768541, 0.0905108296626293, 0.0604314937520682, 0.0307038316420111, 0.00803339617526951, 0],
                        [-0.00667048254770408, -0.00578402402547241, -0.00457805318774593, -0.00276685392734197, 0.00161443031238016, 0.0355257486246225, 0.0848576959162941, 0.0550896915512634, 0.0264924207649873, 0.00618338715738059, 0],
                        [-0.00810476081904397, -0.00711887452570261, -0.00575981180794971, -0.00370994017387353, -0.000247289379969967, 0.00631492914712137, 0.0159465690832996, 0.0101806514274383, 0.00472696523760350, 0.00101414190814641, 0]])

        fail_back_cap = np.zeros((3, 11))
        fail_back_plus = np.array([[-0.0318340660446484, -0.0333371632398721, -0.0344003102313462, -0.0350928399501440, -0.0355942289798210, -0.0340472714735883, -0.0177793074842833, -0.0134568139980143, -0.00816360286280569, -0.00274012101059969, 0],
                        [-0.00168576559187046, -0.00171245547612000, -0.00170948048947762, -0.00165621818985608, -0.00156134427848213, -0.00133755958396985, -0.000172823204875201, 0.000218800101627640, 0.00105594190460327, 0.000772719377701380, 0],
                        [0.00163780037333550, 0.00162128122982061, 0.00157083234913204, 0.00144692568749659, 0.00125732539302155, 0.000926081231422341, -0.000448845109962313, -0.000636870699179088, -0.000661086647821561, -0.000346369545150895, 0]])
        fail_back_minus = np.array([[-0.0263994154574792, -0.0271123371000923, -0.0273961994781665, -0.0270634901110767, -0.0262546907164085, -0.0235410826017107, -0.00699181854119932, -0.00360259014844468, -0.000623605259762018, 0.000205961828682410, 0],
                        [-0.00238372846150582, -0.00251189923902896, -0.00260900644098494, -0.00268741384173711, -0.00276080518638126, -0.00268685143196081, -0.00155824193936580, -0.00122885639616545, -0.000791209982293074, -0.000286286272117077, 0],
                        [-0.00310682833739850, -0.00330389973934471, -0.00346409749926100, -0.00361732086886895, -0.00378187460926391, -0.00376598510398294, -0.00246709634114486, -0.00202680200009824, -0.00137703285041992, -0.000529018633150231, 0]])

        fail_front_cap = np.zeros((3, 11))
        fail_front_plus = np.array([[0.00305444888489182, 0.00272269986209007, 0.00210508754213125, 0.00109322726722145, -0.000722679139433743,  -0.00313509999453344, 0.00288953493505142, 0.00148885587193993, 0.000257719672377998, -0.000498366610866154, 0],
                        [0.00629113126714338, 0.00642378425578826, 0.00626185289594772, 0.00584790133198415, 0.00521930865028814, 0.00490393067230818, 0.00928882382329451, 0.00732532624090147, 0.00471647563005752, 0.00170657885501761, 0],
                        [-0.00155808818329869, -0.00163167006020299, -0.00164697902328030, -0.00162782429920312, -0.00158386754775168, -0.00159251756307525, -0.00246709634114486, -0.00202680200009825, -0.00137703285041992, -0.000529018633150233, 0]])
        fail_front_minus = np.array([[0.00530044720977534, 0.00529525698575218, 0.00499970252549016, 0.00441154663278018, 0.00356112151973586, 0.00304627740193059, 0.00734772073876582, 0.00556134772843825, 0.00337380261357822, 0.00113242003346359, 0],
                        [0.00213051027019948, 0.00165822630057415, 0.000899695789950728, -5.01839235803326e-05, -0.000323898426783084,  -0.000526635439956877, 0.00103021505332878, -3.67047003129318e-05, -0.000177138999790288, -0.000129627148129919, 0],
                        [8.90602192356987e-05, -5.09484493211032e-05, -0.000246286126848654, -0.000542570882169224, -0.000940681668490701, -0.00124738630948535, -0.000448845109962305, -0.000636870699179088, -0.000661086647821556, -0.000346369545150893, 0]])

        buckling_x = np.array([0.394669203912155, 0.394669203912155, 0.394669203912155, 0.394669203912155, 0.394669203912155, 0.394669203912155, 0, 0, 0, 0, 0])
        buckling_z = np.array([0.394669203912155, 0.394669203912155, 0.394669203912155, 0.394669203912155, 0.394669203912155, 0.394669203912155, 0, 0, 0, 0, 0])
        buckling_torsion = np.array([0.0249803622153795, 0.0274166207230945, 0.0298385589887717, 0.0318005580862193, 0.0344072425546554, 0.0376229852836405, 0.0371306344531331, 0.0327850625738252, 0.0259578917805189, 0.0168665337743183, 0])

        fail_quad_buckling = 1.0354
        fail_quad_bend = 0.9098
        fail_quad_torsion = 0.1489
        fail_quad_torbuck = 3.4352

        fail_wire = 0.2088

if __name__ == "__main__":
    unittest.main()
